import { useState } from 'react';
import { FaSearch, FaAppleAlt, FaTimes, FaShoppingCart } from 'react-icons/fa';
import { recipes } from '../data/mockData';
import { useToast } from '../contexts/ToastContext';
import { useCart } from '../contexts/CartContext';
import CartModal from '../components/CartModal';

const RecipesPage = () => {
  const [activeCategory, setActiveCategory] = useState('tous');
  const [showSearchBar, setShowSearchBar] = useState(false);
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedRecipe, setSelectedRecipe] = useState(null);
  const [showCart, setShowCart] = useState(false);
  const { addIngredientsToCart, getCartCount } = useCart();
  
  const categories = ['tous', 'plat principal', 'accompagnement', 'dessert', 'entr√©e'];
  
  const filteredRecipes = activeCategory === 'tous' 
    ? recipes 
    : recipes.filter(recipe => recipe.category === activeCategory);
  
  const searchResults = searchQuery 
    ? filteredRecipes.filter(recipe => 
        recipe.name.toLowerCase().includes(searchQuery.toLowerCase()) ||
        recipe.ingredients.some(ing => ing.toLowerCase().includes(searchQuery.toLowerCase()))
      )
    : filteredRecipes;

  return (
    <div className="flex flex-col pb-20">
      {/* Header */}
      <header className="bg-green-primary rounded-b-card p-4 mb-6 flex items-center justify-between">
        <div className="logo text-3xl text-white flex items-center">
          <span>C</span>
          <span>O</span>
          <span className="text-orange-secondary">üçÖ</span>
          <span>L</span>
          <span>I</span>
          <span className="text-orange-secondary">üçÜ</span>
          <span>E</span>
        </div>
        <div className="flex space-x-2">
          <button 
            className="p-2 text-white"
            onClick={() => setShowSearchBar(!showSearchBar)}
          >
            {showSearchBar ? <FaTimes size={20} /> : <FaSearch size={20} className="text-orange-secondary" />}
          </button>
          <button 
            className="p-2 text-white relative"
            onClick={() => setShowCart(true)}
          >
            <FaShoppingCart size={20} className="text-orange-secondary" />
            {getCartCount() > 0 && (
              <span className="absolute top-0 right-0 bg-orange-secondary text-white text-xs rounded-full h-4 w-4 flex items-center justify-center">
                {getCartCount() > 9 ? '9+' : getCartCount()}
              </span>
            )}
          </button>
        </div>
      </header>
      
      {/* Search Bar */}
      {showSearchBar && (
        <div className="px-4 mb-4">
          <input
            type="text"
            className="w-full p-2 rounded-lg border border-gray-200"
            placeholder="Rechercher une recette..."
            value={searchQuery}
            onChange={(e) => setSearchQuery(e.target.value)}
          />
        </div>
      )}
      
      {/* Category filter */}
      <div className="mb-6 overflow-x-auto px-4">
        <div className="flex space-x-3 pb-2">
          {categories.map(category => (
            <button 
              key={category}
              className={`px-4 py-2 rounded-full text-sm whitespace-nowrap ${
                activeCategory === category 
                  ? 'bg-green-primary text-white' 
                  : 'bg-background-darker text-text-dark'
              }`}
              onClick={() => setActiveCategory(category)}
            >
              {category.charAt(0).toUpperCase() + category.slice(1)}
            </button>
          ))}
        </div>
      </div>
      
      {/* Recipes list */}
      <div className="space-y-5 px-4">
        {searchResults.length > 0 ? (
          searchResults.map((recipe) => (
            <RecipeCard 
              key={recipe.id} 
              recipe={recipe} 
              onSelect={() => setSelectedRecipe(recipe)}
            />
          ))
        ) : (
          <div className="text-center py-8 text-text-light">
            Aucune recette trouv√©e
          </div>
        )}
      </div>
      
      {/* Recipe Modal */}
      {selectedRecipe && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg max-w-md w-full max-h-[80vh] overflow-y-auto">
            <div className="p-4">
              <div className="flex justify-between items-center mb-4">
                <h3 className="text-xl font-medium">{selectedRecipe.name}</h3>
                <button 
                  className="p-1 text-gray-500"
                  onClick={() => setSelectedRecipe(null)}
                >
                  <FaTimes size={20} />
                </button>
              </div>
              
              <div className="mb-4 h-48 overflow-hidden rounded-lg">
                <img 
                  src={getRecipeImage(selectedRecipe.name)} 
                  alt={selectedRecipe.name}
                  className="w-full h-full object-cover"
                />
              </div>
              
              <div className="mb-4">
                <p className="text-sm mb-1"><strong>Pr√©paration:</strong> {selectedRecipe.prepTime}</p>
                <p className="text-sm mb-1"><strong>Cuisson:</strong> {selectedRecipe.cookTime}</p>
                <p className="text-sm mb-4"><strong>Difficult√©:</strong> {renderDifficulty(selectedRecipe.difficulty)}</p>
                
                <h4 className="font-medium mb-2">Ingr√©dients:</h4>
                <ul className="list-disc list-inside mb-4">
                  {selectedRecipe.ingredients.map((ingredient, idx) => (
                    <li key={idx} className="text-sm">{ingredient}</li>
                  ))}
                </ul>
                
                <h4 className="font-medium mb-2">Pr√©paration:</h4>
                <p className="text-sm whitespace-pre-line">
                  {getRecipeInstructions(selectedRecipe.name)}
                </p>
              </div>
              
              <div className="flex flex-col space-y-2">
                <button 
                  className="bg-green-primary text-white w-full py-2 rounded-lg flex items-center justify-center"
                  onClick={() => {
                    addIngredientsToCart(selectedRecipe.ingredients);
                  }}
                >
                  <FaShoppingCart className="mr-2" />
                  Commander les ingr√©dients
                </button>
                
                <button 
                  className="bg-orange-secondary text-white w-full py-2 rounded-lg"
                  onClick={() => setSelectedRecipe(null)}
                >
                  Fermer
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
      
      {/* Cart Modal */}
      {showCart && <CartModal onClose={() => setShowCart(false)} />}
    </div>
  );
};

// Functions for images and rendering difficulty/popularity
function getRecipeImage(recipeName) {
  // V√©rifier si la recette a une image dans les donn√©es
  const recipe = recipes.find(r => r.name === recipeName);
  if (recipe && recipe.image) {
    return recipe.image;
  }
  
  // Fallback pour les recettes qui n'auraient pas d'image dans les donn√©es
  if (recipeName.includes("Boeuf")) {
    return "https://images.pexels.com/photos/8601418/pexels-photo-8601418.jpeg?auto=compress&cs=tinysrgb&w=800";
  } else if (recipeName.includes("Flamenkueche")) {
    return "https://images.pexels.com/photos/15126556/pexels-photo-15126556.jpeg?auto=compress&cs=tinysrgb&w=800";
  } else if (recipeName.includes("Ratatouille")) {
    return "https://images.pexels.com/photos/6248997/pexels-photo-6248997.jpeg?auto=compress&cs=tinysrgb&w=800";
  } else if (recipeName.includes("Blanquette")) {
    return "https://images.pexels.com/photos/5908255/pexels-photo-5908255.jpeg?auto=compress&cs=tinysrgb&w=800";
  } else if (recipeName.includes("Gratin")) {
    return "https://images.pexels.com/photos/9986228/pexels-photo-9986228.jpeg?auto=compress&cs=tinysrgb&w=800";
  } else if (recipeName.includes("Quiche")) {
    return "https://images.pexels.com/photos/6605207/pexels-photo-6605207.jpeg?auto=compress&cs=tinysrgb&w=800";
  } else if (recipeName.includes("Cr√®me Br√ªl√©e")) {
    return "https://images.pexels.com/photos/8605175/pexels-photo-8605175.jpeg?auto=compress&cs=tinysrgb&w=800";
  }
  
  return "https://images.pexels.com/photos/1640777/pexels-photo-1640777.jpeg?auto=compress&cs=tinysrgb&w=800";
}

function renderDifficulty(level) {
  return "üå∂Ô∏è".repeat(level);
}

function renderPopularity(level) {
  return "‚≠ê".repeat(level);
}

// Fonction pour obtenir les instructions de pr√©paration selon la recette
function getRecipeInstructions(recipeName) {
  const instructions = {
    "Boeuf Bourguignon": "1. Faites revenir les lardons dans une cocotte. R√©servez-les.\n2. Faites dorer les morceaux de b≈ìuf dans la m√™me cocotte.\n3. Ajoutez les oignons √©minc√©s et les carottes coup√©es en rondelles.\n4. Saupoudrez de farine, m√©langez puis versez le vin rouge et le bouillon.\n5. Ajoutez le bouquet garni, les lardons et assaisonnez.\n6. Couvrez et laissez mijoter √† feu doux pendant 2h.\n7. Ajoutez les champignons 15 min avant la fin de cuisson.\n8. Servez chaud avec des pommes de terre.",
    
    "Flamenkueche": "1. √âtalez la p√¢te en un rectangle fin sur une plaque de cuisson.\n2. Dans un bol, m√©langez la cr√®me fra√Æche avec du sel, du poivre et de la muscade.\n3. √âtalez ce m√©lange sur la p√¢te.\n4. R√©partissez les lardons et les oignons √©minc√©s finement.\n5. Enfournez √† 250¬∞C pendant 15-20 minutes jusqu'√† ce que les bords soient dor√©s.\n6. Servez aussit√¥t, d√©coup√© en rectangles.",
    
    "Ratatouille": "1. Coupez tous les l√©gumes (aubergines, courgettes, poivrons, tomates, oignons) en cubes.\n2. Dans une grande po√™le, faites revenir les oignons dans l'huile d'olive.\n3. Ajoutez ensuite les poivrons et laissez cuire 5 minutes.\n4. Incorporez les aubergines et les courgettes, poursuivez la cuisson 10 minutes.\n5. Ajoutez les tomates, l'ail √©cras√©, le thym et le laurier.\n6. Laissez mijoter √† feu doux pendant 30-40 minutes en remuant r√©guli√®rement.\n7. Assaisonnez et servez chaud ou froid.",
    
    "Blanquette de Veau": "1. Faites blanchir les morceaux de veau dans une casserole d'eau bouillante pendant 5 minutes.\n2. √âgouttez la viande et placez-la dans une cocotte avec les carottes en rondelles, l'oignon piqu√© de clous de girofle et le bouquet garni.\n3. Couvrez d'eau froide et portez √† √©bullition, puis r√©duisez le feu et laissez mijoter 1h30.\n4. Dans une casserole, pr√©parez un roux avec le beurre et la farine, puis incorporez progressivement le bouillon de cuisson filtr√©.\n5. Ajoutez les champignons et la viande, poursuivez la cuisson 15 minutes.\n6. Hors du feu, liez la sauce avec les jaunes d'≈ìufs et la cr√®me fra√Æche.\n7. R√©chauffez sans bouillir et servez avec du riz.",
    
    "Gratin Dauphinois": "1. Pr√©chauffez le four √† 180¬∞C.\n2. √âpluchez et coupez les pommes de terre en fines rondelles.\n3. Frottez un plat √† gratin avec une gousse d'ail puis beurrez-le.\n4. Dans une casserole, faites chauffer le lait avec la cr√®me, l'ail √©cras√©, le sel, le poivre et la muscade.\n5. Disposez les pommes de terre en couches dans le plat, versez le m√©lange lait-cr√®me.\n6. Enfournez pour 1h jusqu'√† ce que les pommes de terre soient tendres et le dessus dor√©.\n7. Laissez reposer 10 minutes avant de servir.",
    
    "Quiche Lorraine": "1. Pr√©chauffez le four √† 200¬∞C.\n2. √âtalez la p√¢te bris√©e dans un moule √† tarte et piquez le fond avec une fourchette.\n3. Faites revenir les lardons dans une po√™le sans mati√®re grasse.\n4. R√©partissez-les sur le fond de tarte.\n5. Battez les ≈ìufs avec la cr√®me fra√Æche, le lait, le sel, le poivre et la muscade.\n6. Versez ce m√©lange sur les lardons.\n7. Enfournez pour 30-35 minutes jusqu'√† ce que la quiche soit dor√©e et ferme.\n8. Servez ti√®de avec une salade verte.",
    
    "Cr√®me Br√ªl√©e": "1. Pr√©chauffez le four √† 150¬∞C.\n2. Fendez la gousse de vanille et grattez les graines.\n3. Faites chauffer la cr√®me avec la gousse et les graines de vanille.\n4. Dans un saladier, fouettez les jaunes d'≈ìufs avec le sucre jusqu'√† blanchiment.\n5. Versez progressivement la cr√®me chaude sur ce m√©lange en fouettant.\n6. R√©partissez la pr√©paration dans des ramequins.\n7. Faites cuire au bain-marie pendant 35-40 minutes.\n8. Laissez refroidir puis r√©frig√©rez au moins 4 heures.\n9. Au moment de servir, saupoudrez de cassonade et caram√©lisez au chalumeau.",
    
    "Coq au Vin": "1. Faites dorer les morceaux de poulet dans une cocotte avec un peu d'huile.\n2. R√©servez le poulet et faites revenir les lardons, les oignons et les carottes coup√©es en rondelles.\n3. Remettez le poulet, saupoudrez de farine et m√©langez bien.\n4. Versez le vin rouge jusqu'√† couvrir la viande et ajoutez le bouquet garni.\n5. Couvrez et laissez mijoter 1h √† feu doux.\n6. Pendant ce temps, faites revenir les champignons dans du beurre.\n7. Ajoutez les champignons 15 minutes avant la fin de la cuisson.\n8. Servez bien chaud avec des pommes de terre.",
    
    "Salade Ni√ßoise": "1. Lavez et coupez les tomates en quartiers, les haricots verts en tron√ßons apr√®s les avoir cuits √† l'eau.\n2. √âcalez les ≈ìufs durs et coupez-les en quartiers.\n3. √âgouttez le thon et √©miettez-le l√©g√®rement.\n4. Lavez, s√©chez et d√©chirez les feuilles de salade dans un saladier.\n5. Ajoutez les tomates, haricots, ≈ìufs, thon, olives noires et filets d'anchois.\n6. Pr√©parez une vinaigrette avec l'huile d'olive, du vinaigre, du sel et du poivre.\n7. Arrosez la salade de vinaigrette juste avant de servir.",
    
    "Tarte Tatin": "1. Pr√©chauffez le four √† 200¬∞C.\n2. √âpluchez et coupez les pommes en quartiers.\n3. Dans un moule √† tarte tatin, faites fondre le beurre avec le sucre jusqu'√† obtenir un caramel dor√©.\n4. Disposez les pommes dans le caramel en les serrant bien.\n5. Laissez cuire √† feu doux pendant 15 minutes.\n6. D√©posez la p√¢te feuillet√©e sur les pommes en rentrant les bords √† l'int√©rieur du moule.\n7. Enfournez pour 25-30 minutes jusqu'√† ce que la p√¢te soit bien dor√©e.\n8. Laissez ti√©dir 5 minutes puis retournez d√©licatement sur un plat de service."
  };
  
  return instructions[recipeName] || "Instructions de pr√©paration √† venir pour cette recette.";
}

const RecipeCard = ({ recipe, onSelect }) => {
  const { showToast } = useToast();

  return (
    <div className="flex bg-background-darker rounded-card shadow-card overflow-hidden">
      {/* Recipe image */}
      <div className="w-2/5 h-32 overflow-hidden">
        <img 
          src={getRecipeImage(recipe.name)} 
          alt={recipe.name}
          className="w-full h-full object-cover"
        />
      </div>
      
      {/* Recipe details */}
      <div className="w-3/5 p-3 flex flex-col justify-between">
        <div>
          <h3 className="font-medium text-lg">{recipe.name}</h3>
          
          <div className="mt-1">
            <div className="text-xs text-text-light">Difficult√©</div>
            <div className="text-orange-secondary text-sm">
              {renderDifficulty(recipe.difficulty)}
            </div>
          </div>
          
          <div className="mt-1">
            <div className="text-xs text-text-light">Popularit√©</div>
            <div className="text-orange-secondary text-sm">
              {renderPopularity(recipe.popularity)}
            </div>
          </div>
        </div>
        
        <button 
          className="bg-orange-secondary text-white text-sm px-4 py-1 rounded-button mt-2 w-full text-center"
          onClick={() => {
            showToast(`Recette de ${recipe.name} ouverte`, 'success');
            onSelect();
          }}
        >
          Lire recette
        </button>
      </div>
    </div>
  );
};

export default RecipesPage;
